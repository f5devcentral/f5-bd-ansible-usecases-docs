Exercise 1.3 - Adding a load balancing pool
===========================================



Objective
*********

Demonstrate use of the `BIG-IP pool
module <https://docs.ansible.com/ansible/latest/modules/bigip_pool_module.html>`__
to configure a load balancing pool in BIG-IP device. A load balancing
pool is a logical set of devices, such as web servers, that you group
together to receive and process traffic.

Guide
*********

Step 1:
-------

   Examine the ``bigip-node.yml`` in the VSCode editor.
   Expand in the Explorer (f5-bd-ansible-labs --> 101-F5-Basics --> 1.3-add-pool):

      .. figure:: ../images/bigip-pool-examine.png
         :alt: 

         Examine the Code

   -  ``name: CREATE POOL`` is a user defined description that will display in the terminal output.
   -  ``bigip_pool:`` tells the task which module to use.
   -  The ``provider:`` parameter is a group of connection details for the BIG-IP.

      *  The ``server: "{{ ansible_host }}"`` parameter tells the module to connect to the F5 BIG-IP IP address, which is stored as a variable ``ansible_host`` in inventory
      *  The ``user: "{{ ansible_user }}"`` parameter tells the module the username to login to the F5 BIG-IP device with
      *  The ``password: "{{ ansible_password }}"`` parameter tells the module the password to login to the F5 BIG-IP device with
      *  The ``server_port: "{{ server_port }}`` parameter tells the module the port to connect to the F5 BIG-IP device with
      *  The ``validate_certs: false`` parameter tells the module to not validate SSL certificates. This is just used for demonstration purposes since this is a lab.

   -  The ``name: "http_pool"`` parameter tells the module to create a pool named http_pool
   -  The ``lb_method: "round-robin"`` parameter tells the module the load balancing method will be round-robin. A full list of methods can be found on the documentation page for bigip_pool.
   -  The ``monitors: "/Common/http"`` parameter tells the module the that the http_pool will only look at http traffic.
   -  The ``monitor_type: "and_list"`` ensures that all monitors are checked.


Step 2:
-------

   Change directories to the exercise 1.3 folder to examine and execute the code in the Terminal

   .. code::

      cd ~/f5-bd-ansible-labs/101-F5-Basics/1.3-add-pool/

Step 3:
-------

   Run the playbook - Go back to the Terminal on VS Code server on the control host and execute the following:

   .. code::

      ansible-navigator run bigip-pool.yml --mode stdout

   **Playbook Output**

   The output will look as follows.

   .. code:: yaml

      [rhel-user@ede... 1.3-add-pool]$ ansible-navigator run bigip-pool.yml --mode stdout

      PLAY [BIG-IP SETUP] ************************************************************

      TASK [CREATE POOL] *************************************************************
      changed: [f5]

      PLAY RECAP *********************************************************************
      f5                         : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

Solution
********

The finished Ansible Playbook is provided here. Click here: `bigip-pool.yml <https://github.com/network-automation/linklight/blob/master/exercises/ansible_f5/1.3-add-pool/bigip-pool.yml>`__.

Verifying the Solution
----------------------

   - Login to the F5 with your web browser to see what was configured. Grab the IP information for the F5 load balancer from the lab_inventory/hosts file, and type it in like so: 

     * **AWS Provisioner** - https://X.X.X.X:8443/
     * **F5 UDF** - https://X.X.X.X:443/

   - Login information for the BIG-IP:
   
     * username: admin 
     * password: **found in the inventory hosts file**
   
   - The load balancer pool can be found by navigating the menu on the left. Click on Local Traffic-> then click on Pools. |f5pool|

You have finished this exercise.

.. |f5pool| image:: ../images/pool.png
   